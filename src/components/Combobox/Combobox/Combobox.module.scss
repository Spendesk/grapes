@use '../../../theme/placeholders';

.comboboxWrapper {
  position: relative;
}

.combobox {
  @extend %input-layout;
  display: inline-grid;
  grid-template-columns: 1fr var(--grapes-unit-40);
  padding: 0;

  &:not(:focus-within, .invalidCombobox):hover {
    @extend %input-hover;
  }

  &:focus-within {
    @extend %input-focus;
  }
  &.invalidCombobox {
    @extend %input-invalid;

    &:focus-within {
      @extend %input-invalid-focus;
    }
  }
}

.combobox[data-variant='magicGradient'] {
  border: 1px solid transparent;
  background: var(--grapes-color-gradient-magic);
}

.comboboxInputContainer {
  display: flex;
  padding-left: var(--grapes-unit-8);
  overflow: hidden;
  height: 100%;
}

.parentFitCombobox {
  width: 100%;
}

.comboboxInput {
  @extend %input-text;
  @extend %ellipsis;
  flex: 1;
  border: none;
  background: none;
  padding: 0;

  &:focus {
    outline: none;
  }
}

.hideComboboxInput {
  display: none;
}

.comboboxToggleButton {
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  background: none;
  cursor: pointer;
  color: var(--grapes-color-content-secondary-bg-primary);

  &:focus {
    outline: none;
  }
}

.loadingItem {
  margin: var(--grapes-unit-8) var(--grapes-unit-8) 0;
  width: calc(100% - 2 * var(--grapes-unit-8));
}

.comboboxWrapper:has(.comboboxInput:disabled) {
  cursor: not-allowed;

  .combobox {
    @extend %input-disabled;
  }
}
